A:
 0  0  1  2  3  4  4 
 5  6  1  2  3  7  8 
 5  6  9  9  9  7  8 
 5 10 10 11 12 12  8 
13 14 14 11 15 15 16 
13 17 18 18 18 19 16 
17 17 20 20 21 19 19 
B:
 -  -  -  /  *  *  -  +  +  +  /  -  +  -  +  -  -  +  +  +  -  + 
 3  5  1  2 15 105  5 13  9 10  2  3  3  2  8  3  6 11 10 12  1  3 
---------------------------------------------------------------
+----+----+----+----+----+----+----+
|-  3 -  3|-  5|-  1|/  2|* 15 * 15|
+----+----+    +    +    +----+----+
|*105|-  5|-  5|-  1|/  2|+ 13|+  9|
+    +    +----+----+----+    +    +
|*105|-  5|+ 10 + 10 + 10|+ 13|+  9|
+    +----+----+----+----+----+    +
|*105|/  2 /  2|-  3|+  3 +  3|+  9|
+----+----+----+    +----+----+----+
|-  2|+  8 +  8|-  3|-  3 -  3|-  6|
+    +----+----+----+----+----+    +
|-  2|+ 11|+ 10 + 10 + 10|+ 12|-  6|
+----+    +----+----+----+    +----+
|+ 11 + 11|-  1 -  1|+  3|+ 12 + 12|
+----+----+----+----+----+----+----+
---------------------------------------------------------------
BoC:
2 2 2 2 2 3 2 2 3 3 2 2 2 2 2 2 2 3 3 3 2 1 
--------------------------
BoF:
 2  2  2  2  2  2  2 
 3  2  2  2  2  2  3 
 3  2  3  3  3  2  3 
 3  2  2  2  2  2  3 
 2  2  2  2  2  2  2 
 2  3  3  3  3  3  2 
 3  3  2  2  1  3  3 
--------------------------
cageFriends:
 0  1  2  9  3 10  4 11  5  6  7 14 21  8 15 12 19 13 20 27 16 17 18 22 23 24 31 25 26 28 35 29 30 32 33 34 41 36 42 43 37 38 39 40 47 48 44 45 46 
--------------------------
cageIndex:
 0  2  4  6  8 10 13 15 17 20 23 25 27 29 31 33 35 37 40 43 46 48 
--------------------------
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 

checkSUB(0,2)[3] has changed.
checkSUB(0,2)[4] has changed.
checkSUB(0,2)[5] has changed.
checkDIV(0,4)[5] has changed.
checkDIV(0,4)[7] has changed.
checkMUL(0,5)[1] has changed.
checkMUL(0,5)[2] has changed.
checkMUL(0,5)[4] has changed.
checkMUL(0,5)[6] has changed.
checkMUL(0,5)[7] has changed.
checkMUL(0,6)[1] has changed.
checkMUL(0,6)[2] has changed.
checkMUL(0,6)[4] has changed.
checkMUL(0,6)[6] has changed.
checkMUL(0,6)[7] has changed.
checkMUL(1,0)[1] has changed.
checkMUL(1,0)[2] has changed.
checkMUL(1,0)[4] has changed.
checkMUL(1,0)[6] has changed.
checkSUB(1,1)[3] has changed.
checkSUB(1,1)[4] has changed.
checkSUB(1,1)[5] has changed.
checkSUB(1,2)[3] has changed.
checkSUB(1,2)[4] has changed.
checkSUB(1,2)[5] has changed.
checkDIV(1,4)[5] has changed.
checkDIV(1,4)[7] has changed.
checkADD(1,5)[1] has changed.
checkADD(1,5)[2] has changed.
checkADD(1,5)[3] has changed.
checkADD(1,5)[4] has changed.
checkADD(1,5)[5] has changed.
checkMUL(2,0)[2] has changed.
checkMUL(2,0)[4] has changed.
checkMUL(2,0)[6] has changed.
checkSUB(2,1)[3] has changed.
checkSUB(2,1)[4] has changed.
checkSUB(2,1)[5] has changed.
checkADD(2,5)[1] has changed.
checkADD(2,5)[2] has changed.
checkADD(2,5)[3] has changed.
checkADD(2,5)[4] has changed.
checkADD(2,5)[5] has changed.
checkMUL(3,0)[2] has changed.
checkMUL(3,0)[4] has changed.
checkMUL(3,0)[6] has changed.
checkDIV(3,1)[5] has changed.
checkDIV(3,1)[7] has changed.
checkDIV(3,2)[5] has changed.
checkDIV(3,2)[7] has changed.
checkADD(3,4)[3] has changed.
checkADD(3,4)[4] has changed.
checkADD(3,4)[5] has changed.
checkADD(3,4)[6] has changed.
checkADD(3,4)[7] has changed.
checkADD(3,5)[3] has changed.
checkADD(3,5)[4] has changed.
checkADD(3,5)[5] has changed.
checkADD(3,5)[6] has changed.
checkADD(3,5)[7] has changed.
checkSUB(4,6)[2] has changed.
checkSUB(4,6)[3] has changed.
checkSUB(4,6)[4] has changed.
checkSUB(4,6)[5] has changed.
checkSUB(4,6)[6] has changed.
checkSUB(5,6)[2] has changed.
checkSUB(5,6)[3] has changed.
checkSUB(5,6)[4] has changed.
checkSUB(5,6)[5] has changed.
checkSUB(5,6)[6] has changed.
checkADD(6,4)[1] has changed.
checkADD(6,4)[2] has changed.
checkADD(6,4)[4] has changed.
checkADD(6,4)[5] has changed.
checkADD(6,4)[6] has changed.
checkADD(6,4)[7] has changed.
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 0, 1, 0;  0, 0, 1, 0, 1, 0, 0;  0, 0, 1, 0, 1, 0, 0; 
 0, 0, 1, 0, 1, 0, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 0, 1, 0;  0, 0, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 0, 1, 0, 1, 0, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  0, 0, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 0, 1, 0, 1, 0, 1;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 0, 0, 0, 0;  1, 1, 0, 0, 0, 0, 0;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  0, 0, 1, 0, 0, 0, 0;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1; 

(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
block(6,4,3)
(6,5)
(6,6)
check operations:
checkDIV(0,4)[6] has changed.
checkDIV(1,4)[6] has changed.
checkSUB(4,5)[6] has changed.
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
cannot find ans
loop_count = 98
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 0, 0, 0;  0, 0, 1, 0, 1, 0, 0;  0, 0, 1, 0, 1, 0, 0; 
 0, 0, 1, 0, 1, 0, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 0, 0, 0;  0, 0, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 0, 1, 0, 1, 0, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  0, 0, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1; 
 1, 0, 1, 0, 1, 0, 1;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 0, 0, 0, 0;  1, 1, 0, 0, 0, 0, 0;  1, 1, 1, 1, 1, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 1, 1, 1, 0, 1;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  0, 0, 2, 0, 0, 0, 0;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1; 

(0,0) is blank. mincandi:[7]
(0,2) is blank. mincandi:[4]
(0,4) is blank. mincandi:[3]
(0,5) is blank. mincandi:[2]
------------------glevel=[3]-----------------------------------------------------
guess(0,5)=[3]
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
block(0,6,5)
*************checkAcage:**************
cage=4,block=2,index=8,  friends: 5  6 
cage: MUL
value=15,op=15
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
check operations:
checkSUB(0,0)[2] has changed.
checkSUB(0,0)[6] has changed.
checkSUB(0,1)[2] has changed.
checkSUB(0,1)[6] has changed.
checkSUB(1,3)[4] has changed.
checkSUB(4,4)[6] has changed.
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
cannot find ans
loop_count = 196
 1,-3,-3, 1,-3,-3, 1;  1,-3,-3, 1,-3,-3, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1,-3, 1,-3, 1, 1;  1, 1, 0, 1, 0, 0, 0;  0, 0, 3, 0,-3, 0, 0;  0, 0,-3, 0, 3, 0, 0; 
 0, 0, 1, 0, 1, 0, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1,-3, 1, 1, 1;  1, 1, 0, 1, 0, 0, 0;  0, 0, 0, 0, 0, 1, 1;  1, 1, 1, 1,-3, 1, 1; 
 1, 0, 1, 0, 1, 0, 1;  1, 1, 0, 0, 0, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  0, 0, 0, 0, 0, 1, 1;  1, 1, 1, 1,-3, 1, 1; 
 1, 0, 1, 0, 1, 0, 1;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 0, 0, 0, 0;  1, 1, 0, 0, 0, 0, 0;  1, 1, 1, 1,-3, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1,-3, 1;  1, 1,-3, 1, 1, 0, 1;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1,-3, 1, 1, 1, 1;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  0, 0, 2, 0, 0, 0, 0;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1,-3, 1, 1; 

(0,0) is blank. mincandi:[3]
(1,5) is blank. mincandi:[2]
------------------glevel=[4]-----------------------------------------------------
guess(1,5)=[6]
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
block(2,5,7)
*************checkAcage:**************
cage=7,block=2,index=15,  friends:12 19 
cage: ADD
value=13,op=13
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
check operations:
checkSUB(0,2)[1] has changed.
checkSUB(0,3)[7] has changed.
checkSUB(1,1)[2] has changed.
checkSUB(2,1)[1] has changed.
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
cannot find ans
loop_count = 294
 1,-3,-3, 1,-3,-3, 1;  1,-3,-3, 1,-3,-3, 1; -4, 1, 0, 0, 0, 1, 1;  1, 1,-3, 1,-3, 1,-4;  1, 1, 0, 1, 0, 0, 0;  0, 0, 3, 0,-3, 0, 0;  0, 0,-3, 0, 3, 0, 0; 
 0, 0, 1, 0, 1, 0, 1;  1,-4, 0, 0, 0,-4, 1;  1, 1, 0, 0, 0,-4, 1;  1, 1, 1,-3, 1,-4, 1;  1, 1, 0, 1, 0, 0, 0;  0, 0, 0, 0, 0, 4,-4;  1, 1, 1, 1,-3,-4, 1; 
 1, 0, 1, 0, 1, 0,-4; -4, 1, 0, 0, 0, 1,-4;  1, 1, 1, 1, 1, 1,-4;  1, 1, 1, 1, 1, 1,-4;  1, 1, 0, 1, 1, 1,-4;  0, 0, 0, 0, 0,-4, 4;  1, 1, 1, 1,-3, 1,-4; 
 1, 0, 1, 0, 1, 0, 1;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 0, 1, 0;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 0, 0, 0, 0;  1, 1, 0, 0, 0, 0, 0;  1, 1, 1, 1,-3, 1, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1,-3, 1;  1, 1,-3, 1, 1, 0,-4;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 1, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1,-3, 1, 1,-4,-4;  1, 0, 0, 0, 0, 0, 1; 
 1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  1, 1, 0, 1, 1, 1, 1;  0, 0, 2, 0, 0, 0, 0;  1, 1, 0, 1, 1,-4,-4;  1, 1, 0, 1,-3, 1, 1; 

(0,0) is blank. mincandi:[3]
(1,1) is blank. mincandi:[2]
------------------glevel=[5]-----------------------------------------------------
guess(1,1)=[1]
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
check operations:
checkSUB(0,2)[6] has changed.
checkSUB(2,1)[2] has changed.
checkADD(4,2)[7] has changed.
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
row(0,3,6)
*************checkAcage:**************
cage=2,block=2,index=4,  friends: 3 10 
Not filled yet
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
block(2,1,6)
*************checkAcage:**************
cage=6,block=2,index=13,  friends: 8 15 
cage: SUB
value=5,op=5
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
column(5,4,6)
*************checkAcage:**************
cage=18,block=3,index=40,  friends:37 38 39 
Not filled yet
(4,6)
column(4,4,7)
*************checkAcage:**************
cage=15,block=2,index=33,  friends:32 33 
Not filled yet
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
check operations:
checkSUB(1,3)[2] has changed.
checkSUB(1,3)[3] has changed.
checkDIV(3,2)[3] has changed.
checkSUB(3,3)[3] has changed.
checkADD(4,2)[1] has changed.
checkADD(4,2)[2] has changed.
checkSUB(4,3)[3] has changed.
checkSUB(4,5)[1] has changed.
checkSUB(4,5)[2] has changed.
checkSUB(4,5)[5] has changed.
checkSUB(5,6)[1] has changed.
checkSUB(6,2)[7] has changed.
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
column(2,4,5)
*************checkAcage:**************
cage=9,block=3,index=20,  friends:16 17 18 
Not filled yet
(4,5)
block(4,5,4)
*************checkAcage:**************
cage=15,block=2,index=33,  friends:32 33 
cage: SUB
value=3,op=3
(4,6)
block(4,6,1)
*************checkAcage:**************
cage=16,block=2,index=35,  friends:34 41 
Not filled yet
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
block(5,6,7)
*************checkAcage:**************
cage=16,block=2,index=35,  friends:34 41 
cage: SUB
value=6,op=6
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
check operations:
checkSUB(3,3)[1] has changed.
checkSUB(3,3)[4] has changed.
checkSUB(3,3)[7] has changed.
checkSUB(5,0)[2] has changed.
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
row(3,0,7)
*************checkAcage:**************
cage=5,block=3,index=10,  friends: 7 14 21 
Not filled yet
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
check operations:
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
row(3,3,5)
*************checkAcage:**************
cage=11,block=2,index=25,  friends:24 31 
Not filled yet
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
block(4,3,2)
*************checkAcage:**************
cage=11,block=2,index=25,  friends:24 31 
cage: SUB
value=3,op=3
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
check operations:
checkADD(4,2)[6] has changed.
checkSUB(6,2)[1] has changed.
checkSUB(6,2)[4] has changed.
(0,0)
(0,1)
column(6,0,2)
*************checkAcage:**************
cage=17,block=3,index=37,  friends:36 42 43 
Not filled yet
(0,2)
(0,3)
(0,4)
(0,5)
column(4,0,6)
*************checkAcage:**************
cage=13,block=2,index=29,  friends:28 35 
Not filled yet
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
block(1,3,7)
*************checkAcage:**************
cage=2,block=2,index=4,  friends: 3 10 
cage: SUB
value=1,op=1
(1,4)
row(1,0,5)
*************checkAcage:**************
cage=5,block=3,index=10,  friends: 7 14 21 
Not filled yet
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
(2,4)
(2,5)
(2,6)
column(0,2,7)
*************checkAcage:**************
cage=1,block=2,index=2,  friends: 2  9 
Not filled yet
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
(6,1)
(6,2)
(6,3)
(6,4)
(6,5)
(6,6)
row(6,1,7)
*************checkAcage:**************
cage=17,block=3,index=37,  friends:36 42 43 
Not filled yet
check operations:
checkSUB(0,0)[4] has changed.
checkSUB(5,0)[1] has changed.
checkSUB(5,0)[3] has changed.
checkSUB(6,2)[6] has changed.
checkSUB(6,3)[1] has changed.
(0,0)
block(0,0,1)
*************checkAcage:**************
cage=0,block=2,index=0,  friends: 0  1 
Not filled yet
(0,1)
block(0,1,4)
*************checkAcage:**************
cage=0,block=2,index=0,  friends: 0  1 
cage: SUB
value=3,op=3
row(0,4,2)
*************checkAcage:**************
cage=3,block=2,index=6,  friends: 4 11 
Not filled yet
(0,2)
column(2,0,3)
*************checkAcage:**************
cage=5,block=3,index=10,  friends: 7 14 21 
cage: MUL
value=105,op=105
(0,3)
column(5,0,4)
*************checkAcage:**************
cage=13,block=2,index=29,  friends:28 35 
cage: SUB
value=2,op=2
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
block(1,2,2)
*************checkAcage:**************
cage=1,block=2,index=2,  friends: 2  9 
cage: SUB
value=5,op=5
row(1,6,3)
*************checkAcage:**************
cage=8,block=3,index=17,  friends:13 20 27 
Not filled yet
(1,3)
row(1,4,4)
*************checkAcage:**************
cage=3,block=2,index=6,  friends: 4 11 
cage: DIV
value=2,op=2
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
row(2,6,2)
*************checkAcage:**************
cage=8,block=3,index=17,  friends:13 20 27 
Not filled yet
(2,2)
(2,3)
(2,4)
(2,5)
column(3,2,6)
*************checkAcage:**************
cage=10,block=2,index=23,  friends:22 23 
Not filled yet
(2,6)
(3,0)
(3,1)
(3,2)
row(3,1,3)
*************checkAcage:**************
cage=10,block=2,index=23,  friends:22 23 
cage: DIV
value=2,op=2
column(5,3,3)
*************checkAcage:**************
cage=18,block=3,index=40,  friends:37 38 39 
Not filled yet
(3,3)
row(3,6,4)
*************checkAcage:**************
cage=8,block=3,index=17,  friends:13 20 27 
cage: ADD
value=9,op=9
(3,4)
block(3,4,1)
*************checkAcage:**************
cage=12,block=2,index=27,  friends:25 26 
Not filled yet
(3,5)
block(3,5,2)
*************checkAcage:**************
cage=12,block=2,index=27,  friends:25 26 
cage: ADD
value=3,op=3
(3,6)
(4,0)
(4,1)
block(4,1,5)
*************checkAcage:**************
cage=14,block=2,index=31,  friends:29 30 
Not filled yet
(4,2)
block(4,2,3)
*************checkAcage:**************
cage=14,block=2,index=31,  friends:29 30 
cage: ADD
value=8,op=8
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
(5,1)
block(5,1,2)
*************checkAcage:**************
cage=17,block=3,index=37,  friends:36 42 43 
cage: ADD
value=11,op=11
(5,2)
(5,3)
(5,4)
(5,5)
(5,6)
(6,0)
row(6,5,1)
*************checkAcage:**************
cage=19,block=3,index=43,  friends:40 47 48 
Not filled yet
(6,1)
(6,2)
block(6,2,5)
*************checkAcage:**************
cage=20,block=2,index=46,  friends:44 45 
Not filled yet
(6,3)
block(6,3,4)
*************checkAcage:**************
cage=20,block=2,index=46,  friends:44 45 
cage: SUB
value=1,op=1
(6,4)
(6,5)
row(6,6,6)
*************checkAcage:**************
cage=19,block=3,index=43,  friends:40 47 48 
Not filled yet
(6,6)
check operations:
(0,0)
(0,1)
(0,2)
(0,3)
(0,4)
(0,5)
(0,6)
(1,0)
(1,1)
(1,2)
(1,3)
(1,4)
(1,5)
(1,6)
(2,0)
(2,1)
(2,2)
(2,3)
block(2,3,1)
*************checkAcage:**************
cage=9,block=3,index=20,  friends:16 17 18 
Not filled yet
row(2,2,4)
*************checkAcage:**************
cage=9,block=3,index=20,  friends:16 17 18 
cage: ADD
value=10,op=10
(2,4)
(2,5)
(2,6)
(3,0)
(3,1)
(3,2)
(3,3)
(3,4)
(3,5)
(3,6)
(4,0)
(4,1)
(4,2)
(4,3)
(4,4)
(4,5)
(4,6)
(5,0)
row(5,2,1)
*************checkAcage:**************
cage=18,block=3,index=40,  friends:37 38 39 
cage: ADD
value=10,op=10
(5,1)
(5,2)
(5,3)
(5,4)
row(5,5,5)
*************checkAcage:**************
cage=19,block=3,index=43,  friends:40 47 48 
cage: ADD
value=12,op=12
***solution found***
loop_count = 677
 5,-3,-3,-5,-3,-3,-5; -5,-3,-3, 5,-3,-3,-5; -4,-5, 0, 0, 0,-5, 5; -5,-5,-3,-5,-3, 5,-4; -5, 5, 0,-5, 0, 0, 0;  0, 0, 3, 0,-3, 0, 0;  0, 0,-3, 0, 3, 0, 0; 
 0, 0,-5, 0, 5, 0,-5;  5,-4, 0, 0, 0,-4,-5; -5, 5, 0, 0, 0,-4,-5; -5,-5,-5,-3,-5,-4, 5; -5,-5, 0, 5, 0, 0, 0;  0, 0, 0, 0, 0, 4,-4; -5,-5, 5,-5,-3,-4,-5; 
-5, 0, 5, 0,-5, 0,-4; -4,-5, 0, 0, 0, 5,-4; -5,-5,-5, 5,-5,-5,-4;  5,-5,-5,-5,-5,-5,-4; -5,-5, 0,-5, 5,-5,-4;  0, 0, 0, 0, 0,-4, 4; -5, 5,-5,-5,-3,-5,-4; 
-5, 0,-5, 0,-5, 0, 5; -5,-5, 5,-5, 0,-5, 0; -5,-5,-5,-5, 0, 5, 0; -5,-5,-5,-5, 5,-5,-5;  5,-5, 0, 0, 0, 0, 0; -5, 5, 0, 0, 0, 0, 0; -5,-5,-5, 5,-3,-5,-5; 
-5,-5,-5,-5,-5, 5,-5; -5,-5,-5,-5, 5,-5,-5; -5,-5, 5,-5,-5,-5,-5; -5, 5,-5,-5,-5,-5,-5; -5,-5, 0,-5,-5,-3, 5; -5,-5,-3, 5,-5, 0,-4;  5, 0, 0, 0, 0, 0,-5; 
-5,-5,-5, 5,-5,-5,-5; -5, 5,-5,-5,-5,-5,-5;  5,-5,-5,-5,-5,-5,-5; -5,-5, 5,-5,-5,-5,-5; -5,-5, 0,-5,-5, 5,-5; -5,-5,-3,-5, 5,-4,-4; -5, 0, 0, 0, 0, 0, 5; 
-5, 5, 0,-5,-5,-5,-5; -5,-5, 0,-5,-5,-5, 5; -5,-5, 0,-5, 5,-5,-5; -5,-5, 0, 5,-5,-5,-5;  0, 0, 2, 0, 0, 0, 0;  5,-5, 0,-5,-5,-4,-4; -5,-5, 0,-5,-3, 5,-5; 

wrongedge_count = 0
max_glevel = 5
+----+----+----+----+----+----+----+
|-  3 -  3|-  5|-  1|/  2|* 15 * 15|
+----+----+    +    +    +----+----+
|*105|-  5|-  5|-  1|/  2|+ 13|+  9|
+    +    +----+----+----+    +    +
|*105|-  5|+ 10 + 10 + 10|+ 13|+  9|
+    +----+----+----+----+----+    +
|*105|/  2 /  2|-  3|+  3 +  3|+  9|
+----+----+----+    +----+----+----+
|-  2|+  8 +  8|-  3|-  3 -  3|-  6|
+    +----+----+----+----+----+    +
|-  2|+ 11|+ 10 + 10 + 10|+ 12|-  6|
+----+    +----+----+----+    +----+
|+ 11 + 11|-  1 -  1|+  3|+ 12 + 12|
+----+----+----+----+----+----+----+
---------------------------------------------------------------
+----+----+----+----+----+----+----+
|   1    4|   7|   6|   2|   3    5|
+----+----+    +    +    +----+----+
|   5|   1|   2|   7|   4|   6|   3|
+    +    +----+----+----+    +    +
|   3|   6|   4    1    5|   7|   2|
+    +----+----+----+----+----+    +
|   7|   3    6|   5|   1    2|   4|
+----+----+----+    +----+----+----+
|   6|   5    3|   2|   7    4|   1|
+    +----+----+----+----+----+    +
|   4|   2|   1    3    6|   5|   7|
+----+    +----+----+----+    +----+
|   2    7|   5    4|   3|   1    6|
+----+----+----+----+----+----+----+
